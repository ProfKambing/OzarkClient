package me.trambled.ozark.ozarkclient.module.exploit;

import me.trambled.ozark.ozarkclient.event.events.EventPacket;
import me.trambled.ozark.ozarkclient.module.Category;
import me.trambled.ozark.ozarkclient.module.Module;
import me.trambled.ozark.ozarkclient.module.Setting;
import me.zero.alpine.fork.listener.EventHandler;
import me.zero.alpine.fork.listener.Listener;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.*;

import java.util.ArrayList;

//salhack
public class PacketCanceller extends Module {

	public PacketCanceller() {
		super(Category.EXPLOIT);

		this.name        = "PacketCanceller";
		this.tag         = "PacketCanceller";
		this.description = "Cancels packets.";
	}

	Setting CancelCPacketInput = create("CPacketInput", "CancelCPacketInput", true);
	Setting CancelPosition = create("Position", "CancelPosition", true);
	Setting CancelPositionRotation = create("PositionRotation", "CancelPositionRotation", true);
	Setting CancelRotation = create("Rotation", "CancelRotation", true);
	Setting CancelCPacketPlayerAbilities = create("CPacketPlayerAbilities", "CancelCPacketPlayerAbilities", true);
	Setting CancelCPacketPlayerDigging = create("CPacketPlayerDigging", "CancelCPacketPlayerDigging", true);
	Setting CancelCPacketPlayerTryUseItem = create("CPlayerTryUseItem", "CancelCPacketPlayerTryUseItem", true);
	Setting CancelCPacketPlayerTryUseItemOnBlock = create("CPacketPlayerTryUseItemOnBlock", "CancelCPacketPlayerTryUseItemOnBlock", true);
	Setting CancelCPacketEntityAction = create("CPacketEntityAction", "CancelCPacketEntityAction", true);
	Setting CancelCPacketUseEntity = create("CPacketUseEntity", "CancelCPacketUseEntity", true);
	Setting CancelCPacketVehicleMove = create("CPacketVehicleMove", "CancelCPacketVehicleMove", true);

    private final ArrayList<Packet> PacketsToIgnore = new ArrayList <> ( );


    
    @EventHandler
    private final Listener<EventPacket.SendPacket> PacketEvent = new Listener<>(p_Event ->
    {
        if ((p_Event.get_packet() instanceof CPacketInput && CancelCPacketInput.get_value(true))//
            || (p_Event.get_packet() instanceof CPacketPlayer.Position && CancelPosition.get_value(true))//
            || (p_Event.get_packet() instanceof CPacketPlayer.PositionRotation && CancelPositionRotation.get_value(true))//
            || (p_Event.get_packet() instanceof CPacketPlayer.Rotation && CancelRotation.get_value(true)) //
            || (p_Event.get_packet() instanceof CPacketPlayerAbilities && CancelCPacketPlayerAbilities.get_value(true)) //
            || (p_Event.get_packet() instanceof CPacketPlayerDigging && CancelCPacketPlayerDigging.get_value(true)) //
            || (p_Event.get_packet() instanceof CPacketPlayerTryUseItem && CancelCPacketPlayerTryUseItem.get_value(true)) //
            || (p_Event.get_packet() instanceof CPacketPlayerTryUseItemOnBlock && CancelCPacketPlayerTryUseItemOnBlock.get_value(true)) //
            || (p_Event.get_packet() instanceof CPacketEntityAction && CancelCPacketEntityAction.get_value(true))//
            || (p_Event.get_packet() instanceof CPacketUseEntity && CancelCPacketUseEntity.get_value(true))//
            || (p_Event.get_packet() instanceof CPacketVehicleMove && CancelCPacketVehicleMove.get_value(true)))//
        {
            if (PacketsToIgnore.contains(p_Event.get_packet()))
            {
                PacketsToIgnore.remove(p_Event.get_packet());
                return;
            }
            p_Event.cancel();
		}
    });
}
