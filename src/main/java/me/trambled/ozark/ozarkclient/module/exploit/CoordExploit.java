package me.trambled.ozark.ozarkclient.module.exploit;

import me.trambled.ozark.ozarkclient.module.Category;
import me.trambled.ozark.ozarkclient.module.Module;
import me.trambled.ozark.ozarkclient.util.misc.MessageUtil;
import net.minecraft.entity.Entity;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.util.math.Vec3d;

import java.io.File;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.HashMap;

public class CoordExploit extends Module {

    public CoordExploit() {
        super(Category.EXPLOIT);

        this.name        = "CoordExploit";
        this.tag         = "CoordExploit";
        this.description = "Find someone's coords.";
    }

    private final HashMap<Entity, Vec3d> knownPlayers = new HashMap<>();
    private final HashMap<String, Vec3d> tpdPlayers = new HashMap<>();
    private int numTicks = 0;
    private int numForgetTicks = 0;

    @Override
    public void update() {
        if (this.numTicks >= 50) {
            this.numTicks = 0;
            for (final Entity entity : mc.world.loadedEntityList) {
                if (entity instanceof EntityPlayer && !entity.getName().equals(mc.player.getName())) {
                    final Vec3d playerPos = new Vec3d(entity.posX, entity.posY, entity.posZ);
                    if (this.knownPlayers.containsKey(entity)) {
                        if (Math.abs(this.knownPlayers.get(entity).distanceTo(playerPos)) > 50.0
                                && Math.abs(mc.player.getPositionVector().distanceTo(playerPos)) > 100.0
                                && (!this.tpdPlayers.containsKey(entity.getName())
                                || this.tpdPlayers.get(entity.getName()) != playerPos)) {

                            MessageUtil.send_client_message("Player " + entity.getName() + " has tp'd to " + vectorToString(playerPos, false));
                            saveFile(vectorToString(playerPos, false), entity.getName());
                            this.knownPlayers.remove(entity);
                            this.tpdPlayers.put(entity.getName(), playerPos);
                        }
                    }
                    this.knownPlayers.put(entity, playerPos);
                }
            }
        }
        if (this.numForgetTicks >= 9000000) {
            this.tpdPlayers.clear();
        }
        ++this.numTicks;
        ++this.numForgetTicks;
    }

    public static String vectorToString(final Vec3d vector, final boolean includeY) {
        final StringBuilder builder = new StringBuilder();
        builder.append('(');
        builder.append((int)Math.floor(vector.x));
        builder.append(", ");
        if (includeY) {
            builder.append((int)Math.floor(vector.y));
            builder.append(", ");
        }
        builder.append((int)Math.floor(vector.z));
        builder.append(")");
        return builder.toString();
    }

    public void saveFile(String pos, String name) {
        try {
            File file = new File("./OZARKCLIENT/coordexploit.txt");
            file.getParentFile().mkdirs();
            PrintWriter writer = new PrintWriter(new FileWriter(file, true));
            writer.println("name: " + name + " coords: " + pos);
            writer.close();
        } catch (Exception ignored) {}

    }

}
