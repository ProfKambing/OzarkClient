package me.trambled.ozark.ozarkclient.module.exploit;

import me.trambled.ozark.ozarkclient.module.Category;
import me.trambled.ozark.ozarkclient.module.Module;
import me.trambled.ozark.ozarkclient.module.Setting;
import me.trambled.ozark.ozarkclient.util.player.EntityUtil;
import net.minecraft.client.Minecraft;
import net.minecraft.entity.Entity;

import java.lang.reflect.Field;

// xanax
// kambing for timer
public class AntiWeb extends Module {

    public AntiWeb() {
        super(Category.EXPLOIT);

        this.name        = "AntiWeb";
        this.tag         = "AntiWeb";
        this.description = "Stops being slowed down by web.";
    }

    Setting mode = create("Mode", "AntiWebMode", "Vanilla", combobox("Vanilla", "Down", "Both"));
    Setting down_speed = create("Down Speed", "AntiWebDownSpeed", 3f, 0f, 5f);
    Setting timer = create("Timer", "AntiWebKambingMode", false);
    Setting timer_speed = create("Timer Speed", "AntiWebKambingModeSpeed", 4f, 0f, 10f);

    public String web_str = is_not_obf() ? "isInWeb" : "field_70134_J";

    @Override
    public void update() {
        if (full_null_check()) return;
        if (timer.get_value(true) && EntityUtil.isActuallyInWeb(mc.player)) {
            mc.timer.tickLength = 50.0f / ((timer_speed.get_value(1) == 0f) ? 0.1f : timer_speed.get_value(1));
        } else {
            mc.timer.tickLength = 50.0f;
        }
        if (mode.in("Vanilla") || mode.in("Both")) {
            try {
                final Field isInWeb = Entity.class.getDeclaredField(web_str);
                isInWeb.setAccessible(true);
                isInWeb.setBoolean(mc.player, false);
            } catch (Exception e) {
                this.set_disable();
                e.printStackTrace();
            }
        }
        if (mode.in("Down") || mode.in("Both")) {
            if (EntityUtil.isActuallyInWeb(mc.player)) {
                mc.player.motionY = down_speed.get_value(1d) * -1;
            }
        }
    }

    @Override
    protected void disable() {
        mc.timer.tickLength = 50.0f;
    }

    public boolean is_not_obf() {
        try {
            return true;
        } catch (Exception e) {
            return false;
        }
    }

    @Override
    public void update_always() {
        down_speed.set_shown(!mode.in("Vanilla"));
        timer_speed.set_shown(timer.get_value(true));
    }

}
